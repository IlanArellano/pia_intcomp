---
import { STYLISTS } from "../constants";
import Layout from "../layouts/Layout.astro";
import StylistCard from "../components/Stylists/StylistCard.astro";
import InformationBottom from "../components/InformationBottom.astro";
import Title from "../components/Title.astro";

const images = await Astro.glob("/public/img/gallery/*").then((files) =>
  files.map((file) => file.default)
);
---

<Layout title="Stylists">
  <article class="animate-[startFading_1s_ease]">
    <Title title="Nuestros estilistas" class="mx-10 my-10 text-center" />
    <div
      class="grid md:grid-cols-3 sm:grid-cols-2 grid-cols-1 md:gap-5 sm:gap-3 gap-1 my-10 px-10"
    >
      {
        STYLISTS.map((stylits) => {
          return <StylistCard {...stylits} />;
        })
      }
    </div>
  </article>
  <article>
    <Title title="GalerÃ­a" class="text-center" />
    <section class="gallery-container">
      {
        images.map((image) => {
          return (
            <div class="card">
              <div class="card__img">
                <img
                  class="gallery-images"
                  src={image.src}
                  width={image.width}
                  height={image.height}
                  loading="lazy"
                />
              </div>
            </div>
          );
        })
      }
    </section>
  </article>
</Layout>

<script>
  const GalleryContainer =
    document.querySelector<HTMLElement>(".gallery-container");
  GalleryContainer?.style.setProperty("opacity", "0");
  GalleryContainer?.style.setProperty("transform", "translateY(-200px)");

  const galleryObserver = new IntersectionObserver((entries) => {
    const entry = entries[0];
    if (entry.isIntersecting) {
      GalleryContainer?.style.setProperty("opacity", "1");
      GalleryContainer?.style.setProperty("transform", "none");
      galleryObserver.disconnect();
    }
  });
  galleryObserver.observe(GalleryContainer!);
</script>

<style>
  .gallery-images {
    width: 100%;
    display: block;
    height: 100%;
    object-fit: cover;
  }

  .gallery-container {
    display: grid;
    grid-template-columns: 25% 30% 15% 25%;
    gap: 15px;
    grid-template-rows: 50% 50%;
    height: 80vh;
    min-height: 460px;
    padding: max(2vh, 1.5rem);
    transition:
      opacity 2s ease-out,
      transform 1.2s cubic-bezier(0.075, 0.82, 0.165, 1);

    @include mQ(690px) {
      height: 65vh;
    }

    @include mQ(470px) {
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(3, 35%);
    }

    .card {
      border-radius: 25px;
      box-shadow: -2px 4px 15px rgb(0 0 0 / 26%);

      @include mQ(470px) {
        grid-column: span 1;
      }

      &:nth-child(2) {
        grid-column: 2/3;
        grid-row: span 2;

        @include mQ(690px) {
          grid-column: span 1;
          grid-row: span 1;
        }
      }

      &:nth-child(3) {
        grid-column: span 2;

        @include mQ(690px) {
          grid-column: 2/4;
          grid-row: 1/2;
        }
      }

      @include mQ(690px) {
        &:nth-child(6) {
          grid-column: 2/4;
          grid-row: 2/3;
        }
      }

      @include mQ(470px) {
        &:nth-child(5) {
          grid-column: span 2;
        }
      }

      img {
        border-radius: 25px;
      }
      .card__img {
        position: relative;
        height: 100%;
      }
    }
  }
</style>
