---
interface Props {
  href: string;
  title: string;
}

const { href, title } = Astro.props;
const { pathname } = Astro.url;
const isSelected = pathname === href;
---

<li class="menu-item flex justify-between relative w-full">
  <div class="card card-transition"></div>
  {isSelected && <div class="card item-selected" />}
  <a class="flex gap-3 w-full" href={href}>
    <span
      class={`flex-[1] text-right text-nav-text-color ${
        isSelected ? "text-2xl" : "text-xl"
      }`}>{title}</span
    >
  </a>
</li>

<script>
  const menuItems = document.querySelectorAll("li.menu-item");
  menuItems.forEach((item) => {
    const cardTransition = item.querySelector(".card-transition");
    item.addEventListener("mouseenter", () => {
      if (cardTransition)
        cardTransition.classList.add("card-transition-animation");
    });

    item.addEventListener("mouseleave", () => {
      if (cardTransition)
        cardTransition.classList.remove("card-transition-animation");
    });
  });
</script>

<style>
  .card {
    width: 100%;
    height: 5px;
    border-radius: 10px;
    position: absolute;
    top: -0.75rem;
  }
  .card-transition {
    background: white;
    transition: transform 0.3s ease;
    transform: scale(0);
    z-index: 2;
  }
  .card-transition-animation {
    transform: scale(1);
  }

  .item-selected {
    background: gray;
    z-index: 1;
  }
</style>
