---
import type { CardServicePriceInfoProps } from "../../types/card";
import Title from "../Title.astro";
import PriceInfo from "./PriceInfo.astro";

interface Props extends CardServicePriceInfoProps {
  index: number;
}

const { image, orientation, prices, title } = Astro.props;
---

<article class="serviceCards px-5 md:px-10 lg:px20 flex flex-col">
  <div
    class={`flex flex-[1] gap-3 items-center ${
      orientation === "left" ? "lg:flex-row" : "lg:flex-row-reverse"
    } flex-col`}
  >
    <section class="bg-[white] relative flex-[1] w-full h-[300px]">
      <img
        src={image}
        class="image-animation absolute top-[0] w-[500px] h-full left-[25%] object-contain z-[1]"
        alt=""
      />
    </section>

    <section class="flex-[1] flex flex-col gap-3">
      <Title
        title={title}
        class={orientation === "left" ? "text-left" : "text-right"}
      />
      {
        prices.map((info) => {
          return <PriceInfo {...info} />;
        })
      }
    </section>
  </div>
</article>

<script>
  const cards = document.querySelectorAll<HTMLElement>(".serviceCards");
  const cardShowedStatus: boolean[] = [];

  cards.forEach((card, i) => {
    const imageAnimations =
      card.querySelectorAll<HTMLElement>(".image-animation");

    card.style.opacity = "0";
    card.style.transform = "translateY(-50px)";
    cardShowedStatus.push(false);
    const observer = new IntersectionObserver((entries) => {
      const entry = entries[0];
      if (entry.isIntersecting && !cardShowedStatus[i]) {
        cardShowedStatus[i] = true;
        setTimeout(() => {
          card.style.opacity = "1";
          card.style.transform = "translateY(0)";
          imageAnimations.forEach((el, i) => {
            el.style.animation = "image-transition 1s ease-out";
          });
        }, 150);
        observer.disconnect();
      }
    });
    observer.observe(card);
  });
</script>

<style>
  .serviceCards {
    transition:
      opacity 1s ease,
      transform 1s ease;
  }

  @keyframes image-transition {
    0% {
      width: 0;
    }
    100% {
      width: 500px;
    }
  }
</style>
